<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>DataClassContainsFunctions:TagEntity.kt$TagEntity$fun isSame(other: TagEntity)</ID>
    <ID>DataClassContainsFunctions:TaskEntity.kt$TaskEntity$fun isSame(other: TaskEntity)</ID>
    <ID>MagicNumber:TaskEntity.kt$12</ID>
    <ID>MagicNumber:TaskEntity.kt$2023</ID>
    <ID>MagicNumber:TaskEntity.kt$2024</ID>
    <ID>UndocumentedPublicProperty:EntryEntity.kt$EntryEntity$@ColumnInfo(name = "entrydate") val completedDate: LocalDate</ID>
    <ID>UndocumentedPublicProperty:EntryEntity.kt$EntryEntity$@ColumnInfo(name = "note") val notes: String</ID>
    <ID>UndocumentedPublicProperty:EntryEntity.kt$EntryEntity$@ColumnInfo(name = "taskid", index = true) val taskId: Int</ID>
    <ID>UndocumentedPublicProperty:EntryEntity.kt$EntryEntity$@PrimaryKey(autoGenerate = true) @ColumnInfo(name = "_id") val id: Long = 0</ID>
    <ID>UndocumentedPublicProperty:TagEntity.kt$TagEntity$@ColumnInfo(name = "position") val order: Int</ID>
    <ID>UndocumentedPublicProperty:TagEntity.kt$TagEntity$@ColumnInfo(name = "tagname") val name: String</ID>
    <ID>UndocumentedPublicProperty:TagEntity.kt$TagEntity$@PrimaryKey(autoGenerate = true) @ColumnInfo(name = "_id") val id: Long = 0</ID>
    <ID>UndocumentedPublicProperty:Task.kt$Task$@Embedded val task: TaskEntity</ID>
    <ID>UndocumentedPublicProperty:Task.kt$Task$@Relation( parentColumn = "_id", entityColumn = "_id", associateBy = Junction( value = TaskAndTagEntity::class, parentColumn = "taskid", entityColumn = "tagid", ), ) val tags: List&lt;TagEntity&gt;</ID>
    <ID>UndocumentedPublicProperty:TaskAndTagEntity.kt$TaskAndTagEntity$@ColumnInfo("tagid", index = true) val tagId: Long</ID>
    <ID>UndocumentedPublicProperty:TaskAndTagEntity.kt$TaskAndTagEntity$@ColumnInfo("taskid", index = true) val taskId: Long</ID>
    <ID>UndocumentedPublicProperty:TaskAndTagEntity.kt$TaskAndTagEntity$@ColumnInfo(name = "_id") val id: Long = 0</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$@ColumnInfo("firstdue") val firstDue: LocalDate</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$@ColumnInfo("lastnotified") val lastNotified: LocalDate?</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$@ColumnInfo("lastperformed") val lastPerformed: LocalDate?</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$@ColumnInfo("notifications_enabled") val areNotificationsEnabled: Boolean</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$@ColumnInfo("notifications_period") val notificationsPeriod: DatePeriod?</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$@ColumnInfo("notifications_time") val notificationTimeOfDay: LocalTime?</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$@ColumnInfo("period") val periodDays: Int</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$@PrimaryKey(autoGenerate = true) @ColumnInfo(name = "_id") val id: Long = 0</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$val created: LocalDate</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$val details: String</ID>
    <ID>UndocumentedPublicProperty:TaskEntity.kt$TaskEntity$val name: String</ID>
  </CurrentIssues>
</SmellBaseline>
